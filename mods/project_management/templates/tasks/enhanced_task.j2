{# METADATA
title: Enhanced Task Template
description: Comprehensive task template with naming conventions, UI specifications, risk assessment, and detailed implementation tracking
version: 2.0.0
category: tasks
tags: task, comprehensive, implementation, ui, risk, naming, development
author: TaskHero AI
created: {{ current_date|default('2025-01-XX') }}
modified: {{ current_date|default('2025-01-XX') }}
requires: base/document_base.j2
variables: task_id, title, description, priority, status, task_type, implementation_steps, ui_design, risk_assessment, naming_convention
is_base: false
extends: base/document_base.j2
#}

{% extends "base/document_base.j2" %}

{% block metadata -%}
- **Task ID:** {{ task_id or 'TASK-XXX' }}
- **Created:** {{ created or current_date|default('2025-01-XX') }}
- **Due:** {{ due_date or 'DUE-DATE' }}
- **Priority:** {{ priority or 'PRIORITY' }}
- **Status:** {{ status or 'STATUS' }}
- **Assigned to:** {{ assignee or 'ASSIGNEE' }}
- **Task Type:** {{ task_type or 'TASK-TYPE' }}
- **Sequence:** {{ sequence or 'SEQUENCE' }}
- **Estimated Effort:** {{ estimated_effort or '[Small/Medium/Large]' }}
- **Related Epic/Feature:** {{ related_epic or '[Epic name if applicable]' }}
- **Tags:** {{ tags | join(', ') if tags else 'TAGS' }}
{%- endblock metadata %}

{% block overview -%}
{% if show_naming_convention|default(false) -%}
## Task Naming Convention
**Follow the TaskHero naming convention when creating tasks:**

**Format:** `TASK-XXX-[TYPE]-descriptive-name.md`

**Where:**
- **XXX** = Sequential number (001, 002, 003, etc.)
- **[TYPE]** = Task type abbreviation (must match metadata Task Type field)
- **descriptive-name** = Brief but clear description (use hyphens, no spaces)

**Task Type Abbreviations:**
- **DEV** = Development
- **BUG** = Bug Fix
- **TEST** = Test Case
- **DOC** = Documentation
- **DES** = Design

**Examples:**
- `TASK-001-DEV-user-authentication.md`
- `TASK-002-BUG-login-validation-error.md`
- `TASK-003-TEST-payment-gateway.md`
- `TASK-004-DOC-api-documentation-update.md`
- `TASK-005-DES-dashboard-ui-redesign.md`

> **Important:** The task type abbreviation in the filename must match the Task Type field in the metadata section above.

{% if show_metadata_legend|default(false) -%}
### Metadata Legend (for reference only)
- **Priority:** High/Medium/Low - Task urgency and importance level
- **Due:** YYYY-MM-DD - Target completion date
- **Status:** Todo/In Progress/Done/Testing/backlog - Current task state
- **Assigned to:** Developer/Team Member - Person responsible for execution or team
- **Task Type:** DEV/DESIGN/RESEARCH/BUG/TEST - Category of work
- **Sequence:** Number - Order in project timeline
- **Estimated Effort:** Small (1-8h)/Medium (1-3d)/Large (1w+) - Time investment
- **Related Epic/Feature:** Parent feature or epic this task belongs to
- **Tags:** Comma-separated keywords for categorization and filtering
{%- endif %}
{%- endif %}

## 1. Overview
### 1.1. Brief Description
{{ brief_description or '[Concise summary of what this task accomplishes and why it is needed]' }}

### 1.2. Functional Requirements
{% if functional_requirements_list is defined and functional_requirements_list and functional_requirements_list|length > 0 -%}
{% for req in functional_requirements_list -%}
- {{ req }}
{% endfor %}
{% else -%}
{{ functional_requirements | clean_python_list | default('[Specific functionality that must be implemented or changed]') }}
{%- endif %}

### 1.3. Purpose & Benefits
{{ purpose_benefits | default('[Why this task is important and what value it provides]') }}
{% if benefits_list is defined and benefits_list and benefits_list|length > 0 -%}
{% for benefit in benefits_list -%}
- {{ benefit }}
{% endfor %}
{%- endif %}

### 1.4. Success Criteria
{% if success_criteria and success_criteria|length > 0 -%}
{% for criterion in success_criteria -%}
- {% if criterion.completed|default(false) %}[x]{% else %}[ ]{% endif %} {{ criterion.description if criterion is mapping else criterion }}
{% endfor %}
{% else -%}
Success criteria will be defined based on functional requirements.
{%- endif %}
{%- endblock overview %}

{% block main_content -%}
{% if show_flow_diagram|default(true) -%}
## 2. Flow Diagram
{% if flow_description and 'N/A' in flow_description -%}
{{ flow_description }}
{% elif flow_diagram is defined and flow_diagram -%}
**Task flow diagram:**

{{ flow_diagram }}

{{ flow_description or '[AI-generated flow diagram showing the task process and decision points]' }}
{% else -%}
**User's perspective of the task flow using Mermaid flowchart:**

```mermaid
flowchart TD
{% if flow_steps and flow_steps|length > 0 -%}
    A[User starts task] --> B[{{ flow_steps[0].title if flow_steps[0].title else 'User performs action 1' }}]
    {% if flow_steps|length > 1 -%}
    B --> C{"{{ flow_steps[1].title if flow_steps[1].title else 'User decision point' }}"}
    {% if flow_steps|length > 2 -%}
    C -->|Option A| D[{{ flow_steps[2].title if flow_steps[2].title else 'User follows path A' }}]
    {% if flow_steps|length > 3 -%}
    C -->|Option B| E[{{ flow_steps[3].title if flow_steps[3].title else 'User follows path B' }}]
    D --> F[{{ flow_steps[4].title if flow_steps|length > 4 and flow_steps[4].title else 'User completes task' }}]
    E --> F
    {% else -%}
    C -->|Option B| F[User completes task]
    D --> F
    {%- endif %}
    {% else -%}
    C -->|Option A| F[User completes task]
    C -->|Option B| F
    {%- endif %}
    {% else -%}
    B --> F[User completes task]
    {%- endif %}
{% else -%}
    A[User starts task] --> B[User performs action 1]
    B --> C{User decision point}
    C -->|Option A| D[User follows path A]
    C -->|Option B| E[User follows path B]
    D --> F[User completes task]
    E --> F[User completes task]
{%- endif %}
    F --> G[User sees result]
```

{{ flow_description or '[Describe the user journey and key decision points from the user perspective]' }}
{%- endif %}
{%- endif %}

## 3. Implementation Status

### 3.1. Implementation Steps
{% if implementation_steps and implementation_steps|length > 0 -%}
{% for step in implementation_steps -%}
- {% if step['completed']|default(false) %}[x]{% else %}[ ]{% endif %} **Step {{ loop.index }}: {{ step['title'] | default('Step ' + loop.index|string) }}** - Status: {% if step['completed']|default(false) %}‚úÖ Complete{% elif step['in_progress']|default(false) %}üîÑ In Progress{% else %}‚è≥ Pending{% endif %} - Target: {{ step['target_date'] | default('YYYY-MM-DD') }}
  {% if step['substeps'] -%}
  {% for substep in step['substeps'] -%}
  - {% if substep['completed']|default(false) %}[x]{% else %}[ ]{% endif %} Sub-step {{ loop.index }}: {{ substep['description'] | default('Substep description') }}
  {% endfor %}
  {%- endif %}
{% endfor %}
{% else -%}
Implementation steps will be defined during planning phase.
{%- endif %}

## 4. Detailed Description
{{ detailed_description or '[Detailed description of the task, including its purpose, benefits, and any relevant background information]' }}

{% if show_implementation_analysis|default(true) and (current_implementation or current_components or current_limitations or new_features or new_features_2 or new_features_3) -%}
{% if current_implementation and current_implementation != 'Current implementation will be analyzed during planning phase' -%}
**Current Implementation Analysis:**
- {{ current_implementation }}
{% if current_components and current_components != 'Existing components will be mapped and evaluated' -%}
- {{ current_components }}
{%- endif %}
{% if current_limitations and current_limitations != 'Current limitations will be identified and addressed' -%}
- {{ current_limitations }}
{%- endif %}
{%- endif %}

{% if (new_features and new_features != 'New features will be implemented according to requirements') or (new_features_2 and new_features_2 != 'Additional enhancements will be considered') or (new_features_3 and new_features_3 != 'Future extensibility will be planned') -%}
**New Implementation Features:**
{% if new_features and new_features != 'New features will be implemented according to requirements' -%}
- {{ new_features }}
{%- endif %}
{% if new_features_2 and new_features_2 != 'Additional enhancements will be considered' -%}
- {{ new_features_2 }}
{%- endif %}
{% if new_features_3 and new_features_3 != 'Future extensibility will be planned' -%}
- {{ new_features_3 }}
{%- endif %}
{%- endif %}

{% if (migration_approach and migration_approach != 'Migration strategy will be developed if needed') or (backward_compatibility and backward_compatibility != 'Backward compatibility strategy will be defined') or (risk_mitigation and risk_mitigation != 'Risk mitigation strategies will be implemented') -%}
**Migration Strategy:**
{% if migration_approach and migration_approach != 'Migration strategy will be developed if needed' -%}
- {{ migration_approach }}
{%- endif %}
{% if backward_compatibility and backward_compatibility != 'Backward compatibility strategy will be defined' -%}
- {{ backward_compatibility }}
{%- endif %}
{% if risk_mitigation and risk_mitigation != 'Risk mitigation strategies will be implemented' -%}
- {{ risk_mitigation }}
{%- endif %}
{%- endif %}

{% if component_mapping -%}
**Component Mapping:**
| Current Component | New Component | Notes |
|------------------|---------------|-------|
{% for mapping in component_mapping -%}
| {{ mapping['current'] | default('Current component') }} | {{ mapping['new'] | default('New component') }} | {{ mapping['notes'] | default('Migration notes') }} |
{% endfor %}
{%- endif %}
{%- endif %}

{% if show_ui_design|default(false) -%}
## 5. UI Design & Specifications
### 5.1. Design Overview
{{ ui_design_overview|default('[Brief description of the UI changes and design goals]') }}

### 5.2. Wireframes & Layout
**Use ASCII art for layouts, wireframes, and component positioning:**

{% if ascii_layout -%}
```
{{ ascii_layout }}
```
{% elif ui_layout is defined and ui_layout -%}
```
{{ ui_layout }}
```
{% else -%}
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ [Page/Component Layout - Use ASCII art for visual layouts]   ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇ Sidebar     ‚îÇ ‚îÇ Main Content Area                       ‚îÇ ‚îÇ
‚îÇ ‚îÇ - Item 1    ‚îÇ ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ ‚îÇ
‚îÇ ‚îÇ - Item 2    ‚îÇ ‚îÇ ‚îÇ Header/Title Section                ‚îÇ ‚îÇ ‚îÇ
‚îÇ ‚îÇ - Item 3    ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ‚îÇ ‚îÇ
‚îÇ ‚îÇ             ‚îÇ ‚îÇ ‚îÇ Content Block 1                     ‚îÇ ‚îÇ ‚îÇ
‚îÇ ‚îÇ             ‚îÇ ‚îÇ ‚îÇ Content Block 2                     ‚îÇ ‚îÇ ‚îÇ
‚îÇ ‚îÇ             ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```
{%- endif %}

### 5.3. Design System References
- **Colors:** {{ ui_colors|default('[Primary: #color, Secondary: #color, etc.]') }}
- **Typography:** {{ ui_typography|default('[Font family, sizes, weights]') }}
- **Spacing:** {{ ui_spacing|default('[Padding/margin standards]') }}
- **Components:** {{ ui_components|default('[shadcn/ui components used]') }}
- **Icons:** {{ ui_icons|default('[Icon library and specific icons]') }}

### 5.4. Visual Design References
{% if design_references is defined and design_references -%}
{% for ref in design_references -%}
- {{ ref }}
{% endfor %}
{% else -%}
- [Link to Figma/Design file]
- [Link to existing similar components]
- [Screenshots or mockups if available]
{%- endif %}
{%- endif %}

## 6. Risk Assessment
### 6.1. Potential Risks
| Risk | Impact | Probability | Mitigation Strategy |
|------|--------|-------------|-------------------|
{% if risks is defined and risks -%}
{% for risk in risks -%}
| {{ risk['description'] | default('[Risk description]') }} | {{ risk['impact'] | default('Medium') }} | {{ risk['probability'] | default('Low') }} | {{ risk['mitigation'] | default('[Mitigation strategy]') }} |
{% endfor %}
{% else -%}
| [Risk 1] | [High/Medium/Low] | [High/Medium/Low] | [Mitigation approach] |
| [Risk 2] | [High/Medium/Low] | [High/Medium/Low] | [Mitigation approach] |
{%- endif %}



{% if database_changes -%}
### 7.2. Database Changes
{{ database_changes }}

{% if database_schema -%}
```mermaid
erDiagram
    {{ database_schema }}
```
{% else -%}
```mermaid
erDiagram
    %% Replace this with your actual database schema if needed
    TABLE1 ||--o{ TABLE2 : "relationship"
    TABLE1 {
        id int PK
        field1 string
    }
    TABLE2 {
        id int PK
        table1_id int FK
    }
```
{%- endif %}
{%- endif %}






{%- endblock main_content %}

{% block dependencies -%}
{% if (dependencies and dependencies|length > 0) or (dependent_tasks and dependent_tasks|length > 0) or (technical_dependencies and technical_dependencies|length > 0) -%}
## Dependencies
{% if dependencies and dependencies|length > 0 -%}
### Required By This Task
{% for dep in dependencies -%}
- {{ dep }}
{% endfor %}
{%- endif %}

{% if dependent_tasks and dependent_tasks|length > 0 -%}
### Dependent On This Task
{% for task in dependent_tasks -%}
- {{ task }}
{% endfor %}
{%- endif %}

{% if technical_dependencies and technical_dependencies|length > 0 -%}
### Technical Dependencies
{% for dep in technical_dependencies -%}
- {{ dep['name'] | default('Dependency') }} - {{ dep['version'] | default(dep['requirement']) | default('Version/requirement') }}
{% endfor %}
{%- endif %}

{% if dependency_type and dependency_type != 'Dependencies will be identified during planning phase' -%}
### Dependency Type
{{ dependency_type }}
{%- endif %}
{%- endif %}
{%- endblock dependencies %}

{% block testing -%}
## Testing
{{ testing_overview or 'Testing will be handled in a separate task based on this task summary and requirements.' }}

{% if testing_strategy is defined and testing_strategy -%}
**Testing Strategy:** {{ testing_strategy }}
{%- endif %}

{% if test_cases is defined and test_cases -%}
**Test Cases:**
{% for test_case in test_cases -%}
- **{{ test_case['name'] | default('Test Case ' + loop.index|string) }}**: {{ test_case['description'] | default('Test case description') }}
  - Expected: {{ test_case['expected'] | default('Expected result') }}
  - Status: {{ test_case['status'] | default('Pending') }}
{% endfor %}
{%- endif %}
{%- endblock testing %}

{% block technical_considerations -%}
{% if technical_considerations and technical_considerations != 'Consider performance, security, maintainability, and scalability requirements.' -%}
## Technical Considerations
{{ technical_considerations }}

{% if (state_management and state_management != 'Define how application state will be managed and synchronized.') or (data_persistence and data_persistence != 'Data persistence requirements will be defined based on functionality needs') or (state_sync and state_sync != 'State synchronization will follow established patterns') -%}
**State Management:**
{% if state_management and state_management != 'Define how application state will be managed and synchronized.' -%}
- {{ state_management }}
{%- endif %}
{% if data_persistence and data_persistence != 'Data persistence requirements will be defined based on functionality needs' -%}
- {{ data_persistence }}
{%- endif %}
{% if state_sync and state_sync != 'State synchronization will follow established patterns' -%}
- {{ state_sync }}
{%- endif %}
{%- endif %}

{% if (component_architecture and component_architecture != 'Plan component structure for reusability and maintainability.') or (reusability and reusability != 'Components will be designed for maximum reusability') or (integration_patterns and integration_patterns != 'Integration will follow existing architectural patterns') -%}
**Component Architecture:**
{% if component_architecture and component_architecture != 'Plan component structure for reusability and maintainability.' -%}
- {{ component_architecture }}
{%- endif %}
{% if reusability and reusability != 'Components will be designed for maximum reusability' -%}
- {{ reusability }}
{%- endif %}
{% if integration_patterns and integration_patterns != 'Integration will follow existing architectural patterns' -%}
- {{ integration_patterns }}
{%- endif %}
{%- endif %}

{% if (performance_requirements and performance_requirements != 'Identify performance benchmarks and optimization strategies.') or (memory_management and memory_management != 'Memory usage will be optimized for performance') or (loading_optimizations and loading_optimizations != 'Loading performance will be optimized where applicable') -%}
**Performance Considerations:**
{% if performance_requirements and performance_requirements != 'Identify performance benchmarks and optimization strategies.' -%}
- {{ performance_requirements }}
{%- endif %}
{% if memory_management and memory_management != 'Memory usage will be optimized for performance' -%}
- {{ memory_management }}
{%- endif %}
{% if loading_optimizations and loading_optimizations != 'Loading performance will be optimized where applicable' -%}
- {{ loading_optimizations }}
{%- endif %}
{%- endif %}

{% if (browser_compatibility and browser_compatibility != 'Cross-browser compatibility will be ensured') or (backward_compatibility_notes and backward_compatibility_notes != 'Backward compatibility will be maintained where possible') or (integration_compatibility and integration_compatibility != 'Integration compatibility with external systems will be verified') -%}
**Compatibility:**
{% if browser_compatibility and browser_compatibility != 'Cross-browser compatibility will be ensured' -%}
- {{ browser_compatibility }}
{%- endif %}
{% if backward_compatibility_notes and backward_compatibility_notes != 'Backward compatibility will be maintained where possible' -%}
- {{ backward_compatibility_notes }}
{%- endif %}
{% if integration_compatibility and integration_compatibility != 'Integration compatibility with external systems will be verified' -%}
- {{ integration_compatibility }}
{%- endif %}
{%- endif %}

{% if database_changes -%}
### Database Changes
{{ database_changes }}

{% if database_schema -%}
```mermaid
erDiagram
    {{ database_schema }}
```
{% else -%}
```mermaid
erDiagram
    %% Replace this with your actual database schema if needed
    TABLE1 ||--o{ TABLE2 : "relationship"
    TABLE1 {
        id int PK
        field1 string
    }
    TABLE2 {
        id int PK
        table1_id int FK
    }
```
{%- endif %}
{%- endif %}
{%- endif %}
{%- endblock technical_considerations %}

{% block time_tracking -%}
{% if estimated_hours and estimated_hours != 'Time estimation will be provided during planning phase' -%}
## Time Tracking
- **Estimated hours:** {{ estimated_hours }}
{% if actual_hours and actual_hours != 'Actual hours will be tracked during implementation' -%}
- **Actual hours:** {{ actual_hours }}
{%- endif %}
{%- elif actual_hours and actual_hours != 'Actual hours will be tracked during implementation' -%}
## Time Tracking
- **Actual hours:** {{ actual_hours }}
{%- endif %}
{%- endblock time_tracking %}

{% block references -%}
{% if references and references|length > 0 -%}
## References
{% for ref in references -%}
- {{ ref }}
{% endfor %}
{%- endif %}
{%- endblock references %}

{% block updates -%}
## Updates
{% if updates -%}
{% for update in updates -%}
- **{{ update.date }}** - {{ update.description }}
{% endfor %}
{% else -%}
- **{{ current_date|default('2025-01-XX') }}** - Task created
{%- endif %}
{%- endblock updates %}

