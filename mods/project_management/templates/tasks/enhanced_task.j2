{# METADATA
title: Enhanced Task Template
description: Comprehensive task template with naming conventions, UI specifications, risk assessment, and detailed implementation tracking
version: 2.0.0
category: tasks
tags: task, comprehensive, implementation, ui, risk, naming, development
author: TaskHero AI
created: {{ current_date }}
modified: {{ current_date }}
requires: base/document_base.j2
variables: task_id, title, description, priority, status, task_type, implementation_steps, ui_design, risk_assessment, naming_convention
is_base: false
extends: base/document_base.j2
#}

{% extends "base/document_base.j2" %}

{% block metadata -%}
- **Task ID:** {{ task_id or 'TASK-XXX' }}
- **Created:** {{ created or current_date }}
- **Due:** {{ due_date or 'DUE-DATE' }}
- **Priority:** {{ priority or 'PRIORITY' }}
- **Status:** {{ status or 'STATUS' }}
- **Assigned to:** {{ assignee or 'ASSIGNEE' }}
- **Task Type:** {{ task_type or 'TASK-TYPE' }}
- **Sequence:** {{ sequence or 'SEQUENCE' }}
- **Estimated Effort:** {{ estimated_effort or '[Small/Medium/Large]' }}
- **Related Epic/Feature:** {{ related_epic or '[Epic name if applicable]' }}
- **Tags:** {{ tags | join(', ') if tags else 'TAGS' }}
{%- endblock metadata %}

{% block overview -%}
{% if show_naming_convention|default(true) -%}
## Task Naming Convention
**Follow the TaskHero naming convention when creating tasks:**

**Format:** `TASK-XXX-[TYPE]-descriptive-name.md`

**Where:**
- **XXX** = Sequential number (001, 002, 003, etc.)
- **[TYPE]** = Task type abbreviation (must match metadata Task Type field)
- **descriptive-name** = Brief but clear description (use hyphens, no spaces)

**Task Type Abbreviations:**
- **DEV** = Development
- **BUG** = Bug Fix
- **TEST** = Test Case
- **DOC** = Documentation
- **DES** = Design

**Examples:**
- `TASK-001-DEV-user-authentication.md`
- `TASK-002-BUG-login-validation-error.md`
- `TASK-003-TEST-payment-gateway.md`
- `TASK-004-DOC-api-documentation-update.md`
- `TASK-005-DES-dashboard-ui-redesign.md`

> **Important:** The task type abbreviation in the filename must match the Task Type field in the metadata section above.

{% if show_metadata_legend|default(true) -%}
### Metadata Legend (for reference only)
- **Priority:** High/Medium/Low - Task urgency and importance level
- **Due:** YYYY-MM-DD - Target completion date
- **Status:** Todo/In Progress/Done/Testing/backlog - Current task state
- **Assigned to:** Developer/Team Member - Person responsible for execution or team
- **Task Type:** DEV/DESIGN/RESEARCH/BUG/TEST - Category of work
- **Sequence:** Number - Order in project timeline
- **Estimated Effort:** Small (1-8h)/Medium (1-3d)/Large (1w+) - Time investment
- **Related Epic/Feature:** Parent feature or epic this task belongs to
- **Tags:** Comma-separated keywords for categorization and filtering
{%- endif %}
{%- endif %}

## 1. Overview
### 1.1. Brief Description
{{ brief_description or '[Concise summary of what this task accomplishes and why it is needed]' }}

### 1.2. Functional Requirements
{{ functional_requirements or '[Specific functionality that must be implemented or changed]' }}
{% if functional_requirements_list -%}
{% for req in functional_requirements_list -%}
- {{ req }}
{% endfor %}
{% else -%}
- [Requirement 1]
- [Requirement 2]
- [Requirement 3]
{%- endif %}

### 1.3. Purpose & Benefits
{{ purpose_benefits or '[Why this task is important and what value it provides]' }}
{% if benefits_list -%}
{% for benefit in benefits_list -%}
- {{ benefit }}
{% endfor %}
{% else -%}
- [Benefit 1]
- [Benefit 2]
- [Benefit 3]
{%- endif %}

### 1.4. Success Criteria
{% if success_criteria -%}
{% for criterion in success_criteria -%}
- {% if criterion.completed|default(false) %}[x]{% else %}[ ]{% endif %} {{ criterion.description if criterion is mapping else criterion }}
{% endfor %}
{% else -%}
- [ ] [Specific success criterion 1]
- [ ] [Specific success criterion 2]
- [ ] [Specific success criterion 3]
{%- endif %}
{%- endblock overview %}

{% block main_content -%}
## 2. Flow Diagram
**User's perspective of the task flow using Mermaid flowchart:**

```mermaid
flowchart TD
{% if flow_steps and flow_steps|length > 0 -%}
    A[User starts task] --> B[{{ flow_steps[0].title if flow_steps[0].title else 'User performs action 1' }}]
    {% if flow_steps|length > 1 -%}
    B --> C{"{{ flow_steps[1].title if flow_steps[1].title else 'User decision point' }}"}
    {% if flow_steps|length > 2 -%}
    C -->|Option A| D[{{ flow_steps[2].title if flow_steps[2].title else 'User follows path A' }}]
    {% if flow_steps|length > 3 -%}
    C -->|Option B| E[{{ flow_steps[3].title if flow_steps[3].title else 'User follows path B' }}]
    D --> F[{{ flow_steps[4].title if flow_steps|length > 4 and flow_steps[4].title else 'User completes task' }}]
    E --> F
    {% else -%}
    C -->|Option B| F[User completes task]
    D --> F
    {%- endif %}
    {% else -%}
    C -->|Option A| F[User completes task]
    C -->|Option B| F
    {%- endif %}
    {% else -%}
    B --> F[User completes task]
    {%- endif %}
{% else -%}
    A[User starts task] --> B[User performs action 1]
    B --> C{User decision point}
    C -->|Option A| D[User follows path A]
    C -->|Option B| E[User follows path B]
    D --> F[User completes task]
    E --> F[User completes task]
{%- endif %}
    F --> G[User sees result]
```

{{ flow_description or '[Describe the user journey and key decision points from the user perspective]' }}

## 3. Implementation Status

### 3.1. Implementation Steps
{% if implementation_steps -%}
{% for step in implementation_steps -%}
- {% if step.completed|default(false) %}[x]{% else %}[ ]{% endif %} **Step {{ loop.index }}: {{ step.title }}** - Status: {% if step.completed|default(false) %}✅ Complete{% elif step.in_progress|default(false) %}🔄 In Progress{% else %}⏳ Pending{% endif %} - Target: {{ step.target_date or 'YYYY-MM-DD' }}
  {% if step.substeps -%}
  {% for substep in step.substeps -%}
  - {% if substep.completed|default(false) %}[x]{% else %}[ ]{% endif %} Sub-step {{ loop.index }}: {{ substep.description }}
  {% endfor %}
  {%- endif %}
{% endfor %}
{% else -%}
- [ ] **Step 1: [Main Step Title]** - Status: ⏳ Pending - Target: YYYY-MM-DD
  - [ ] Sub-step 1.1: [Detailed sub-step description]
  - [ ] Sub-step 1.2: [Detailed sub-step description]
  - [ ] Sub-step 1.3: [Detailed sub-step description]
- [ ] **Step 2: [Main Step Title]** - Status: ⏳ Pending - Target: YYYY-MM-DD
  - [ ] Sub-step 2.1: [Detailed sub-step description]
  - [ ] Sub-step 2.2: [Detailed sub-step description]
  - [ ] Sub-step 2.3: [Detailed sub-step description]
- [ ] **Step 3: [Main Step Title]** - Status: ⏳ Pending - Target: YYYY-MM-DD
  - [ ] Sub-step 3.1: [Detailed sub-step description]
  - [ ] Sub-step 3.2: [Detailed sub-step description]
  - [ ] Sub-step 3.3: [Detailed sub-step description]
{%- endif %}

## 4. Detailed Description
{{ detailed_description or '[Detailed description of the task, including its purpose, benefits, and any relevant background information]' }}

{% if show_implementation_analysis|default(true) -%}
**Current Implementation Analysis:**
- {{ current_implementation or '[Describe current state/implementation]' }}
- {{ current_components or '[Key components and their roles]' }}
- {{ current_limitations or '[Current limitations or issues]' }}

**New Implementation Features:**
- {{ new_features or '[Feature 1 and its benefits]' }}
- {{ new_features_2 or '[Feature 2 and its benefits]' }}
- {{ new_features_3 or '[Feature 3 and its benefits]' }}

**Migration Strategy:**
- {{ migration_approach or '[Approach for transitioning from current to new]' }}
- {{ backward_compatibility or '[Backward compatibility considerations]' }}
- {{ risk_mitigation or '[Risk mitigation strategies]' }}

{% if component_mapping|default(false) -%}
**Component Mapping:** (if applicable)
| Current Component | New Component | Notes |
|------------------|---------------|-------|
{% for mapping in component_mapping -%}
| {{ mapping.current }} | {{ mapping.new }} | {{ mapping.notes }} |
{% endfor %}
{% else -%}
| Current Component | New Component | Notes |
|------------------|---------------|-------|
| [Current 1] | [New 1] | [Migration notes] |
| [Current 2] | [New 2] | [Migration notes] |
{%- endif %}
{%- endif %}

## 5. UI Design & Specifications
### 5.1. Design Overview
{{ ui_design_overview or '[Brief description of the UI changes and design goals]' }}

### 5.2. Wireframes & Layout
**Use ASCII art for layouts, wireframes, and component positioning:**

{% if ui_layout|default(false) -%}
```
{{ ui_layout }}
```
{% else -%}
```
┌─────────────────────────────────────────────────────────────┐
│ [Page/Component Layout - Use ASCII art for visual layouts]   │
│ ┌─────────────┐ ┌─────────────────────────────────────────┐ │
│ │ Sidebar     │ │ Main Content Area                       │ │
│ │ - Item 1    │ │ ┌─────────────────────────────────────┐ │ │
│ │ - Item 2    │ │ │ Header/Title Section                │ │ │
│ │ - Item 3    │ │ ├─────────────────────────────────────┤ │ │
│ │             │ │ │ Content Block 1                     │ │ │
│ │             │ │ │ Content Block 2                     │ │ │
│ │             │ │ └─────────────────────────────────────┘ │ │
│ └─────────────┘ └─────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────┘
```
{%- endif %}

**ASCII Art Tips:**
- Use `┌─┐└─┘│├─┤` for clean borders and boxes
- Use `═══` for emphasis/headers
- Use `...` for content areas
- Use `[Button]` for interactive elements
- Use `📊📅💳⚙️` emojis for icons and visual elements
- Use `↕↗▼` arrows for sorting and navigation indicators
- Use `🔴🟢` colored circles for status indicators
- Use `^annotations` below diagrams for explanations

### 5.3. Design System References
- **Colors:** {{ ui_colors or '[Primary: #color, Secondary: #color, etc.]' }}
- **Typography:** {{ ui_typography or '[Font family, sizes, weights]' }}
- **Spacing:** {{ ui_spacing or '[Padding/margin standards]' }}
- **Components:** {{ ui_components or '[shadcn/ui components used]' }}
- **Icons:** {{ ui_icons or '[Icon library and specific icons]' }}

### 5.4. Visual Design References
{% if design_references|default(false) -%}
{% for ref in design_references -%}
- {{ ref }}
{% endfor %}
{% else -%}
- [Link to Figma/Design file]
- [Link to existing similar components]
- [Screenshots or mockups if available]
{%- endif %}

## 6. Risk Assessment
### 6.1. Potential Risks
| Risk | Impact | Probability | Mitigation Strategy |
|------|--------|-------------|-------------------|
{% if risks|default(false) -%}
{% for risk in risks -%}
| {{ risk.description }} | {{ risk.impact }} | {{ risk.probability }} | {{ risk.mitigation }} |
{% endfor %}
{% else -%}
| [Risk 1] | [High/Medium/Low] | [High/Medium/Low] | [Mitigation approach] |
| [Risk 2] | [High/Medium/Low] | [High/Medium/Low] | [Mitigation approach] |
{%- endif %}

## 7. Technical Considerations
{{ technical_considerations or '[Any technical considerations, potential challenges, or architectural decisions]' }}

**State Management:**
- {{ state_management or '[State management approach and rationale]' }}
- {{ data_persistence or '[Data persistence requirements]' }}
- {{ state_sync or '[State synchronization considerations]' }}

**Component Architecture:**
- {{ component_architecture or '[Component structure and organization]' }}
- {{ reusability or '[Reusability and modularity considerations]' }}
- {{ integration_patterns or '[Integration patterns with existing codebase]' }}

**Performance Considerations:**
- {{ performance_requirements or '[Performance requirements and optimizations]' }}
- {{ memory_management or '[Memory management considerations]' }}
- {{ loading_optimizations or '[Loading and rendering optimizations]' }}

**Compatibility:**
- {{ browser_compatibility or '[Browser/platform compatibility requirements]' }}
- {{ backward_compatibility_notes or '[Backward compatibility with existing features]' }}
- {{ integration_compatibility or '[Integration compatibility with external systems]' }}

{% if database_changes -%}
### 7.2. Database Changes
{{ database_changes }}

{% if database_schema -%}
```mermaid
erDiagram
    {{ database_schema }}
```
{% else -%}
```mermaid
erDiagram
    %% Replace this with your actual database schema if needed
    TABLE1 ||--o{ TABLE2 : "relationship"
    TABLE1 {
        id int PK
        field1 string
    }
    TABLE2 {
        id int PK
        table1_id int FK
    }
```
{%- endif %}
{%- endif %}

## 8. Time Tracking
- **Estimated hours:** {{ estimated_hours or '[X]' }}
- **Actual hours:** {{ actual_hours or '[To be filled]' }}

## 9. References
{% if references -%}
{% for ref in references -%}
- {{ ref }}
{% endfor %}
{% else -%}
- [External Documentation/API Reference 1]
- [External Documentation/API Reference 2]
- [Internal Codebase Reference 1]
- [Internal Codebase Reference 2]
- [Design/Mockup References]
- [Related Tasks/Issues]
{%- endif %}

## 10. Updates
{% if updates -%}
{% for update in updates -%}
- **{{ update.date }}** - {{ update.description }}
{% endfor %}
{% else -%}
- **{{ current_date }}** - Task created
{%- endif %}
{%- endblock main_content %}

{% block dependencies -%}
## Dependencies
### Required By This Task
{% if dependencies -%}
{% for dep in dependencies -%}
- {{ dep }}
{% endfor %}
{% else -%}
- [Task ID] - [Task Title] - [Status]
{%- endif %}

### Dependent On This Task
{% if dependent_tasks -%}
{% for task in dependent_tasks -%}
- {{ task }}
{% endfor %}
{% else -%}
- [Task ID] - [Task Title] - [Status]
{%- endif %}

### Technical Dependencies
{% if technical_dependencies|default(false) -%}
{% for dep in technical_dependencies -%}
- {{ dep.name }} - {{ dep.version or dep.requirement }}
{% endfor %}
{% else -%}
- [Package/Tool 1] - [Version/Requirement]
- [Package/Tool 2] - [Version/Requirement]
{%- endif %}

### Dependency Type
{{ dependency_type or '- **Blocking**: This task cannot start until the dependency is completed\n- **Informational**: This task can start but may need information from the dependency\n- **Related**: Tasks are related but not directly dependent' }}
{%- endblock dependencies %}

{% block testing -%}
## Testing
{{ testing_overview or 'Testing will be handled in a separate task based on this task summary and requirements.' }}

{% if testing_strategy|default(false) -%}
**Testing Strategy:** {{ testing_strategy }}
{%- endif %}

{% if test_cases|default(false) -%}
**Test Cases:**
{% for test_case in test_cases -%}
- **{{ test_case.name }}**: {{ test_case.description }}
  - Expected: {{ test_case.expected }}
  - Status: {{ test_case.status or 'Pending' }}
{% endfor %}
{%- endif %}
{%- endblock testing %}

{% block technical_considerations -%}
## Technical Considerations
{{ technical_considerations or '[Any technical considerations, potential challenges, or architectural decisions]' }}

**State Management:**
- {{ state_management or '[State management approach and rationale]' }}
- {{ data_persistence or '[Data persistence requirements]' }}
- {{ state_sync or '[State synchronization considerations]' }}

**Component Architecture:**
- {{ component_architecture or '[Component structure and organization]' }}
- {{ reusability or '[Reusability and modularity considerations]' }}
- {{ integration_patterns or '[Integration patterns with existing codebase]' }}

**Performance Considerations:**
- {{ performance_requirements or '[Performance requirements and optimizations]' }}
- {{ memory_management or '[Memory management considerations]' }}
- {{ loading_optimizations or '[Loading and rendering optimizations]' }}

**Compatibility:**
- {{ browser_compatibility or '[Browser/platform compatibility requirements]' }}
- {{ backward_compatibility_notes or '[Backward compatibility with existing features]' }}
- {{ integration_compatibility or '[Integration compatibility with external systems]' }}

{% if database_changes|default(false) -%}
### Database Changes
{{ database_changes }}

{% if database_schema|default(false) -%}
```mermaid
erDiagram
    {{ database_schema }}
```
{% else -%}
```mermaid
erDiagram
    %% Replace this with your actual database schema if needed
    TABLE1 ||--o{ TABLE2 : "relationship"
    TABLE1 {
        id int PK
        field1 string
    }
    TABLE2 {
        id int PK
        table1_id int FK
    }
```
{%- endif %}
{%- endif %}
{%- endblock technical_considerations %}

{% block time_tracking -%}
## Time Tracking
- **Estimated hours:** {{ estimated_hours or '[X]' }}
- **Actual hours:** {{ actual_hours or '[To be filled]' }}
{%- endblock time_tracking %}

{% block references -%}
{% if references|default(false) -%}
## References
{% for ref in references -%}
- {{ ref }}
{% endfor %}
{%- endif %}
{%- endblock references %}

{% block updates -%}
## Updates
{% if updates -%}
{% for update in updates -%}
- **{{ update.date }}** - {{ update.description }}
{% endfor %}
{% else -%}
- **{{ current_date }}** - Task created
{%- endif %}
{%- endblock updates %} 